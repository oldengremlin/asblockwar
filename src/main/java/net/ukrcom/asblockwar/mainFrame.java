/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package net.ukrcom.asblockwar;

import java.beans.PropertyVetoException;
import java.io.IOException;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author olden
 */
public class mainFrame extends javax.swing.JFrame {

    private static String[] args = null;

    private final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");

    private Config config;

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        try {
            this.config = new Config(mainFrame.args);
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();
    }

    public void setArgs(String[] args) {
        mainFrame.args = args;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jStatusBar = new javax.swing.JLabel();
        jDesktopPane = new javax.swing.JDesktopPane();
        jMainFrameMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemOpenASNetworks = new javax.swing.JMenuItem();
        jMenuItemOpenASPath = new javax.swing.JMenuItem();
        jMenuItemQuit = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Аналізатор AS та мереж роssійських ресурсів");
        setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        setMinimumSize(new java.awt.Dimension(640, 480));
        setName("mainFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(800, 600));
        setSize(new java.awt.Dimension(800, 600));

        jStatusBar.setText("Готові до роботи…");
        jStatusBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jStatusBar, java.awt.BorderLayout.PAGE_END);
        getContentPane().add(jDesktopPane, java.awt.BorderLayout.CENTER);

        jMenuFile.setText("Робочий простір");

        jMenuItemOpenASNetworks.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItemOpenASNetworks.setText("Список AS для блокування мереж");
        jMenuItemOpenASNetworks.setToolTipText("Зчитати списко AS в нове робоче вікно");
        jMenuItemOpenASNetworks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenASNetworksActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpenASNetworks);

        jMenuItemOpenASPath.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItemOpenASPath.setText("Список AS для блокування as-path");
        jMenuFile.add(jMenuItemOpenASPath);

        jMenuItemQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemQuit.setText("Вихід");
        jMenuItemQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemQuitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemQuit);

        jMainFrameMenuBar.add(jMenuFile);

        jMenuEdit.setText("Редактор");
        jMainFrameMenuBar.add(jMenuEdit);

        setJMenuBar(jMainFrameMenuBar);

        getAccessibleContext().setAccessibleDescription("Програма аналізує перелік AS роssійських ресурсів.\nНа підставі цього переліку формуються регулярні вирази для JunOS, що можна застосувати в as-path для подальшого reject-у.\nТакож формує перелік мереж для блокування, по цих AS. Порівнює з наявними мережами на bgp-спікері, що анонсує заблоковані мережі і додає нові, або ж видаляє ті, які більше не належать заданим в переліку AS.");

        setBounds(0, 0, 800, 637);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemQuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemQuitActionPerformed

    private void jMenuItemOpenASNetworksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenASNetworksActionPerformed
        AutonomousSystemsList autonomousSystemsList = new AutonomousSystemsList(this.config);
        jDesktopPane.add(autonomousSystemsList);
        try {
            autonomousSystemsList.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        autonomousSystemsList.moveToFront();
    }//GEN-LAST:event_jMenuItemOpenASNetworksActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane;
    private javax.swing.JMenuBar jMainFrameMenuBar;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemOpenASNetworks;
    private javax.swing.JMenuItem jMenuItemOpenASPath;
    private javax.swing.JMenuItem jMenuItemQuit;
    public javax.swing.JLabel jStatusBar;
    // End of variables declaration//GEN-END:variables
}
